/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.tigrisdata.tigris_core.models.operations;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.core.type.TypeReference;
import com.tigrisdata.tigris_core.utils.SpeakeasyMetadata;
import com.tigrisdata.tigris_core.utils.Utils;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Optional;


public class SearchGetRequest {

    /**
     * document id.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ids")
    private Optional<? extends java.util.List<String>> ids;

    /**
     * index name where to create documents.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=index")
    private String index;

    /**
     * Tigris project name.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=project")
    private String project;

    public SearchGetRequest(
            Optional<? extends java.util.List<String>> ids,
            String index,
            String project) {
        Utils.checkNotNull(ids, "ids");
        Utils.checkNotNull(index, "index");
        Utils.checkNotNull(project, "project");
        this.ids = ids;
        this.index = index;
        this.project = project;
    }

    /**
     * document id.
     */
    public Optional<? extends java.util.List<String>> ids() {
        return ids;
    }

    /**
     * index name where to create documents.
     */
    public String index() {
        return index;
    }

    /**
     * Tigris project name.
     */
    public String project() {
        return project;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * document id.
     */
    public SearchGetRequest withIds(java.util.List<String> ids) {
        Utils.checkNotNull(ids, "ids");
        this.ids = Optional.ofNullable(ids);
        return this;
    }

    /**
     * document id.
     */
    public SearchGetRequest withIds(Optional<? extends java.util.List<String>> ids) {
        Utils.checkNotNull(ids, "ids");
        this.ids = ids;
        return this;
    }

    /**
     * index name where to create documents.
     */
    public SearchGetRequest withIndex(String index) {
        Utils.checkNotNull(index, "index");
        this.index = index;
        return this;
    }

    /**
     * Tigris project name.
     */
    public SearchGetRequest withProject(String project) {
        Utils.checkNotNull(project, "project");
        this.project = project;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SearchGetRequest other = (SearchGetRequest) o;
        return 
            java.util.Objects.deepEquals(this.ids, other.ids) &&
            java.util.Objects.deepEquals(this.index, other.index) &&
            java.util.Objects.deepEquals(this.project, other.project);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            ids,
            index,
            project);
    }
    
    @Override
    public String toString() {
        return Utils.toString(SearchGetRequest.class,
                "ids", ids,
                "index", index,
                "project", project);
    }
    
    public final static class Builder {
 
        private Optional<? extends java.util.List<String>> ids = Optional.empty();
 
        private String index;
 
        private String project;  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * document id.
         */
        public Builder ids(java.util.List<String> ids) {
            Utils.checkNotNull(ids, "ids");
            this.ids = Optional.ofNullable(ids);
            return this;
        }

        /**
         * document id.
         */
        public Builder ids(Optional<? extends java.util.List<String>> ids) {
            Utils.checkNotNull(ids, "ids");
            this.ids = ids;
            return this;
        }

        /**
         * index name where to create documents.
         */
        public Builder index(String index) {
            Utils.checkNotNull(index, "index");
            this.index = index;
            return this;
        }

        /**
         * Tigris project name.
         */
        public Builder project(String project) {
            Utils.checkNotNull(project, "project");
            this.project = project;
            return this;
        }
        
        public SearchGetRequest build() {
            return new SearchGetRequest(
                ids,
                index,
                project);
        }
    }
}

