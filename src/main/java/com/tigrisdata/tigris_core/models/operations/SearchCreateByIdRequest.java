/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.tigrisdata.tigris_core.models.operations;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.core.type.TypeReference;
import com.tigrisdata.tigris_core.utils.SpeakeasyMetadata;
import com.tigrisdata.tigris_core.utils.Utils;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;


public class SearchCreateByIdRequest {

    @SpeakeasyMetadata("request:mediaType=application/json")
    private com.tigrisdata.tigris_core.models.shared.CreateByIdRequest createByIdRequest;

    /**
     * document id.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=id")
    private String id;

    /**
     * index name where to create document.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=index")
    private String index;

    /**
     * Tigris project name.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=project")
    private String project;

    public SearchCreateByIdRequest(
            com.tigrisdata.tigris_core.models.shared.CreateByIdRequest createByIdRequest,
            String id,
            String index,
            String project) {
        Utils.checkNotNull(createByIdRequest, "createByIdRequest");
        Utils.checkNotNull(id, "id");
        Utils.checkNotNull(index, "index");
        Utils.checkNotNull(project, "project");
        this.createByIdRequest = createByIdRequest;
        this.id = id;
        this.index = index;
        this.project = project;
    }

    public com.tigrisdata.tigris_core.models.shared.CreateByIdRequest createByIdRequest() {
        return createByIdRequest;
    }

    /**
     * document id.
     */
    public String id() {
        return id;
    }

    /**
     * index name where to create document.
     */
    public String index() {
        return index;
    }

    /**
     * Tigris project name.
     */
    public String project() {
        return project;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public SearchCreateByIdRequest withCreateByIdRequest(com.tigrisdata.tigris_core.models.shared.CreateByIdRequest createByIdRequest) {
        Utils.checkNotNull(createByIdRequest, "createByIdRequest");
        this.createByIdRequest = createByIdRequest;
        return this;
    }

    /**
     * document id.
     */
    public SearchCreateByIdRequest withId(String id) {
        Utils.checkNotNull(id, "id");
        this.id = id;
        return this;
    }

    /**
     * index name where to create document.
     */
    public SearchCreateByIdRequest withIndex(String index) {
        Utils.checkNotNull(index, "index");
        this.index = index;
        return this;
    }

    /**
     * Tigris project name.
     */
    public SearchCreateByIdRequest withProject(String project) {
        Utils.checkNotNull(project, "project");
        this.project = project;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SearchCreateByIdRequest other = (SearchCreateByIdRequest) o;
        return 
            java.util.Objects.deepEquals(this.createByIdRequest, other.createByIdRequest) &&
            java.util.Objects.deepEquals(this.id, other.id) &&
            java.util.Objects.deepEquals(this.index, other.index) &&
            java.util.Objects.deepEquals(this.project, other.project);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            createByIdRequest,
            id,
            index,
            project);
    }
    
    @Override
    public String toString() {
        return Utils.toString(SearchCreateByIdRequest.class,
                "createByIdRequest", createByIdRequest,
                "id", id,
                "index", index,
                "project", project);
    }
    
    public final static class Builder {
 
        private com.tigrisdata.tigris_core.models.shared.CreateByIdRequest createByIdRequest;
 
        private String id;
 
        private String index;
 
        private String project;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder createByIdRequest(com.tigrisdata.tigris_core.models.shared.CreateByIdRequest createByIdRequest) {
            Utils.checkNotNull(createByIdRequest, "createByIdRequest");
            this.createByIdRequest = createByIdRequest;
            return this;
        }

        /**
         * document id.
         */
        public Builder id(String id) {
            Utils.checkNotNull(id, "id");
            this.id = id;
            return this;
        }

        /**
         * index name where to create document.
         */
        public Builder index(String index) {
            Utils.checkNotNull(index, "index");
            this.index = index;
            return this;
        }

        /**
         * Tigris project name.
         */
        public Builder project(String project) {
            Utils.checkNotNull(project, "project");
            this.project = project;
            return this;
        }
        
        public SearchCreateByIdRequest build() {
            return new SearchCreateByIdRequest(
                createByIdRequest,
                id,
                index,
                project);
        }
    }
}

