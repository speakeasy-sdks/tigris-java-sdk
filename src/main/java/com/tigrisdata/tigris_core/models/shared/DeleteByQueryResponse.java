/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.tigrisdata.tigris_core.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import com.tigrisdata.tigris_core.utils.Utils;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Optional;


public class DeleteByQueryResponse {

    /**
     * The number of documents deleted.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("count")
    private Optional<? extends Integer> count;

    public DeleteByQueryResponse(
            @JsonProperty("count") Optional<? extends Integer> count) {
        Utils.checkNotNull(count, "count");
        this.count = count;
    }

    /**
     * The number of documents deleted.
     */
    public Optional<? extends Integer> count() {
        return count;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * The number of documents deleted.
     */
    public DeleteByQueryResponse withCount(int count) {
        Utils.checkNotNull(count, "count");
        this.count = Optional.ofNullable(count);
        return this;
    }

    /**
     * The number of documents deleted.
     */
    public DeleteByQueryResponse withCount(Optional<? extends Integer> count) {
        Utils.checkNotNull(count, "count");
        this.count = count;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        DeleteByQueryResponse other = (DeleteByQueryResponse) o;
        return 
            java.util.Objects.deepEquals(this.count, other.count);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            count);
    }
    
    @Override
    public String toString() {
        return Utils.toString(DeleteByQueryResponse.class,
                "count", count);
    }
    
    public final static class Builder {
 
        private Optional<? extends Integer> count = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * The number of documents deleted.
         */
        public Builder count(int count) {
            Utils.checkNotNull(count, "count");
            this.count = Optional.ofNullable(count);
            return this;
        }

        /**
         * The number of documents deleted.
         */
        public Builder count(Optional<? extends Integer> count) {
            Utils.checkNotNull(count, "count");
            this.count = count;
            return this;
        }
        
        public DeleteByQueryResponse build() {
            return new DeleteByQueryResponse(
                count);
        }
    }
}

