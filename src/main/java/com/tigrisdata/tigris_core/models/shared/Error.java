/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.tigrisdata.tigris_core.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import com.tigrisdata.tigris_core.utils.Utils;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Optional;

/**
 * Error - The Error type defines a logical error model
 */

public class Error {

    /**
     * The status code is a short, machine parsable string, which uniquely identifies the error type. Tigris to HTTP code mapping [here](/reference/http-code)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("code")
    private Optional<? extends Code> code;

    /**
     * A developer-facing descriptive error message
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("message")
    private Optional<? extends String> message;

    public Error(
            @JsonProperty("code") Optional<? extends Code> code,
            @JsonProperty("message") Optional<? extends String> message) {
        Utils.checkNotNull(code, "code");
        Utils.checkNotNull(message, "message");
        this.code = code;
        this.message = message;
    }

    /**
     * The status code is a short, machine parsable string, which uniquely identifies the error type. Tigris to HTTP code mapping [here](/reference/http-code)
     */
    public Optional<? extends Code> code() {
        return code;
    }

    /**
     * A developer-facing descriptive error message
     */
    public Optional<? extends String> message() {
        return message;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * The status code is a short, machine parsable string, which uniquely identifies the error type. Tigris to HTTP code mapping [here](/reference/http-code)
     */
    public Error withCode(Code code) {
        Utils.checkNotNull(code, "code");
        this.code = Optional.ofNullable(code);
        return this;
    }

    /**
     * The status code is a short, machine parsable string, which uniquely identifies the error type. Tigris to HTTP code mapping [here](/reference/http-code)
     */
    public Error withCode(Optional<? extends Code> code) {
        Utils.checkNotNull(code, "code");
        this.code = code;
        return this;
    }

    /**
     * A developer-facing descriptive error message
     */
    public Error withMessage(String message) {
        Utils.checkNotNull(message, "message");
        this.message = Optional.ofNullable(message);
        return this;
    }

    /**
     * A developer-facing descriptive error message
     */
    public Error withMessage(Optional<? extends String> message) {
        Utils.checkNotNull(message, "message");
        this.message = message;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Error other = (Error) o;
        return 
            java.util.Objects.deepEquals(this.code, other.code) &&
            java.util.Objects.deepEquals(this.message, other.message);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            code,
            message);
    }
    
    @Override
    public String toString() {
        return Utils.toString(Error.class,
                "code", code,
                "message", message);
    }
    
    public final static class Builder {
 
        private Optional<? extends Code> code = Optional.empty();
 
        private Optional<? extends String> message = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * The status code is a short, machine parsable string, which uniquely identifies the error type. Tigris to HTTP code mapping [here](/reference/http-code)
         */
        public Builder code(Code code) {
            Utils.checkNotNull(code, "code");
            this.code = Optional.ofNullable(code);
            return this;
        }

        /**
         * The status code is a short, machine parsable string, which uniquely identifies the error type. Tigris to HTTP code mapping [here](/reference/http-code)
         */
        public Builder code(Optional<? extends Code> code) {
            Utils.checkNotNull(code, "code");
            this.code = code;
            return this;
        }

        /**
         * A developer-facing descriptive error message
         */
        public Builder message(String message) {
            Utils.checkNotNull(message, "message");
            this.message = Optional.ofNullable(message);
            return this;
        }

        /**
         * A developer-facing descriptive error message
         */
        public Builder message(Optional<? extends String> message) {
            Utils.checkNotNull(message, "message");
            this.message = message;
            return this;
        }
        
        public Error build() {
            return new Error(
                code,
                message);
        }
    }
}

