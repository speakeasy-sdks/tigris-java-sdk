/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.tigrisdata.tigris_core.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import com.tigrisdata.tigris_core.utils.Utils;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Optional;

/**
 * RotateAppKeyResponse - RotateAppKeyResponse returns the new app key with rotated secret
 */

public class RotateAppKeyResponse {

    /**
     * An user AppKey
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("app_key")
    private Optional<? extends AppKey> appKey;

    public RotateAppKeyResponse(
            @JsonProperty("app_key") Optional<? extends AppKey> appKey) {
        Utils.checkNotNull(appKey, "appKey");
        this.appKey = appKey;
    }

    /**
     * An user AppKey
     */
    public Optional<? extends AppKey> appKey() {
        return appKey;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * An user AppKey
     */
    public RotateAppKeyResponse withAppKey(AppKey appKey) {
        Utils.checkNotNull(appKey, "appKey");
        this.appKey = Optional.ofNullable(appKey);
        return this;
    }

    /**
     * An user AppKey
     */
    public RotateAppKeyResponse withAppKey(Optional<? extends AppKey> appKey) {
        Utils.checkNotNull(appKey, "appKey");
        this.appKey = appKey;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        RotateAppKeyResponse other = (RotateAppKeyResponse) o;
        return 
            java.util.Objects.deepEquals(this.appKey, other.appKey);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            appKey);
    }
    
    @Override
    public String toString() {
        return Utils.toString(RotateAppKeyResponse.class,
                "appKey", appKey);
    }
    
    public final static class Builder {
 
        private Optional<? extends AppKey> appKey = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * An user AppKey
         */
        public Builder appKey(AppKey appKey) {
            Utils.checkNotNull(appKey, "appKey");
            this.appKey = Optional.ofNullable(appKey);
            return this;
        }

        /**
         * An user AppKey
         */
        public Builder appKey(Optional<? extends AppKey> appKey) {
            Utils.checkNotNull(appKey, "appKey");
            this.appKey = appKey;
            return this;
        }
        
        public RotateAppKeyResponse build() {
            return new RotateAppKeyResponse(
                appKey);
        }
    }
}

