/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.tigrisdata.tigris_core.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ReadRequestOptions - Options that can be used to modify the results, for example "limit" to control the number of documents returned by the server.
 */
public class ReadRequestOptions {
    /**
     * A collation allows you to specify string comparison rules. Default is case-sensitive, to override it you can set this option to 'ci' that will apply to all the text fields in the filters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("collation")
    public Collation collation;

    public ReadRequestOptions withCollation(Collation collation) {
        this.collation = collation;
        return this;
    }
    
    /**
     * Limit the number of documents returned by the read operation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("limit")
    public Long limit;

    public ReadRequestOptions withLimit(Long limit) {
        this.limit = limit;
        return this;
    }
    
    /**
     * A cursor for use in pagination. The next streams will return documents after this offset.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("offset")
    public String offset;

    public ReadRequestOptions withOffset(String offset) {
        this.offset = offset;
        return this;
    }
    
    /**
     * Number of documents to skip before starting to return resulting documents.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("skip")
    public Long skip;

    public ReadRequestOptions withSkip(Long skip) {
        this.skip = skip;
        return this;
    }
    
    public ReadRequestOptions(){}
}
