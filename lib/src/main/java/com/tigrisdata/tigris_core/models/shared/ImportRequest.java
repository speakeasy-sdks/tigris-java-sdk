/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.tigrisdata.tigris_core.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ImportRequest {
    /**
     * The list of autogenerated fields of the collection
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("autogenerated")
    public String[] autogenerated;
    public ImportRequest withAutogenerated(String[] autogenerated) {
        this.autogenerated = autogenerated;
        return this;
    }
    
    /**
     * Optionally specify a database branch name to perform operation on
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("branch")
    public String branch;
    public ImportRequest withBranch(String branch) {
        this.branch = branch;
        return this;
    }
    
    /**
     * Allow to create collection if it doesn't exists
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("create_collection")
    public Boolean createCollection;
    public ImportRequest withCreateCollection(Boolean createCollection) {
        this.createCollection = createCollection;
        return this;
    }
    
    /**
     * Array of documents to import. Each document is a JSON object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("documents")
    public java.util.Map<String, Object>[] documents;
    public ImportRequest withDocuments(java.util.Map<String, Object>[] documents) {
        this.documents = documents;
        return this;
    }
    
    /**
     * additional options for import requests.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("options")
    public ImportRequestOptions options;
    public ImportRequest withOptions(ImportRequestOptions options) {
        this.options = options;
        return this;
    }
    
    /**
     * List of fields which constitutes primary key of the collection If not specified and field with name 'id' is present, it's used as a primary key, further if inferred type is UUID, then it's set as autogenerated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("primary_key")
    public String[] primaryKey;
    public ImportRequest withPrimaryKey(String[] primaryKey) {
        this.primaryKey = primaryKey;
        return this;
    }
    
}
